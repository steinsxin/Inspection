name: Python Wheel Package

on:
  push:
    branches: ["main"]

jobs:
  build-for-jetson:
    runs-on: [ARM64]
    timeout-minutes: 30

    container: nvcr.io/nvidia/l4t-jetpack:r36.3.0

    env:
      USE_CONTAINER: true

    steps:
      - name: Check container environment
        run: |
          echo "[INFO] Container is running"
          uname -a
          whoami
          echo "[INFO] Python path: $(which python3)"
          echo "[INFO] Network test:"
          ping -c 3 baidu.com || echo "[WARN] Network not available"

      - name: Install system dependencies
        run: |
          echo "[INFO] Updating APT"
          apt update || { echo "[ERROR] apt update failed"; exit 1; }

          echo "[INFO] Installing dependencies"
          apt install -y git git-lfs curl wget make cmake \
            build-essential swig python3-dev python3-pip \
            tabulate nmap || { echo "[ERROR] apt install failed"; exit 1; }

          echo "[INFO] Dependencies installed"

      - name: Ensure python symlink
        run: |
          ln -sf /usr/bin/python3 /usr/bin/python
          python --version
          which python

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check Python configuration
        run: |
          echo "[INFO] Python version info:"
          python --version
          echo "[INFO] Python location:"
          which python
          python -c "import sys; print('[INFO] sys.executable =', sys.executable)"
          python -c "import sysconfig; print('[INFO] include path =', sysconfig.get_path('include'))"

      - name: Install Python build tools
        run: |
          echo "[INFO] Installing pip packages"
          python -m pip install --upgrade pip
          python -m pip install wheel Cython || { echo "[ERROR] pip install failed"; exit 1; }

      - name: Build wheel package with heartbeat
        env:
          GITHUB_RUN_NUMBER: ${{ github.run_number }}
        run: |
          echo "[INFO] Starting build"

          # Background heartbeat
          (while true; do echo "[HEARTBEAT] build still running..."; sleep 60; done) &
          HEARTBEAT_PID=$!

          echo "[INFO] Running cythonizer"
          python cythonizer.py -s src || { echo "[ERROR] cythonizer failed"; kill $HEARTBEAT_PID; exit 1; }

          echo "[INFO] Running setup.py bdist_wheel"
          python setup.py bdist_wheel || { echo "[ERROR] wheel build failed"; kill $HEARTBEAT_PID; exit 1; }

          echo "[INFO] Wheel build complete"
          kill $HEARTBEAT_PID

      - name: Upload built wheel
        uses: actions/upload-artifact@v4
        with:
          name: autolife_robot_inspection-wheel
          path: dist/*.whl
